{"version":3,"sources":["../../lib/client/runtime.js"],"names":["global","_try","func","ex","setResult","error","name","message","stack","_execute","eval","_code","debug","args","console","log","JSON","stringify","dispatch","callback","parameters","wrappedCallback","apply","parse","push","json","_dispatch","result","Error","value","httpRequest","options","setTimeout","timeout","clearTimeout","id","define","defineBlocking","defineAsync","pop"],"mappings":"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","sourcesContent":["global._try = (func) => {\n  try {\n    func();\n  } catch (ex) {\n    global.setResult({\n      error: {\n        name: ex.name,\n        message: ex.message,\n        stack: ex.stack\n      }\n    });\n  }\n};\n\nglobal._execute = () => {\n  global._try(() => {\n    eval(global._code);\n  });\n};\n\nglobal.debug = (...args) => {\n  console.log(JSON.stringify(args));\n}\n\nglobal.dispatch = (name, args, callback) => {\n  if (typeof callback !== 'function') {\n    callback = null;\n  }\n\n  const parameters = [ JSON.stringify({ name, args: args || [] }) ];\n\n  const wrappedCallback = (...args) => {\n    global._try(() => {\n      callback.apply(null, JSON.parse(args));\n    });\n  };\n\n  parameters.push(wrappedCallback);\n\n  const json = global._dispatch.apply(global, parameters);\n\n  const result = json != null ? JSON.parse(json).result : null;\n\n  if (result && result.error) {\n    throw new Error(result.error.message);\n  }\n\n  return result != null ? result.value : null;\n}\n\nglobal.httpRequest = (options, callback) => {\n  return global.dispatch('httpRequest', [ options ], callback);\n};\n\nglobal.setResult = (result) => {\n  return dispatch('setResult', result != null ? [ result ] : null);\n};\n\nglobal.setTimeout = (callback, timeout) => {\n  return global.dispatch('setTimeout', [ timeout ], callback);\n};\n\nglobal.clearTimeout = (id) => {\n  return global.dispatch('clearTimeout', [ id ]);\n};\n\nglobal.console = {\n  log: (...args) => {\n    return global.dispatch('log', [ args ]);\n  },\n  error: (...args) => {\n    return global.dispatch('error', [ args ]);\n  }\n};\n\nglobal.define = (name) => {\n  global[name] = (...args) => {\n    return global.dispatch(name, args);\n  };\n};\n\nglobal.defineBlocking = global.define;\n\nglobal.defineAsync = (name) => {\n  global[name] = (...args) => {\n    const callback = args.pop();\n\n    return global.dispatch(name, args, callback);\n  };\n};\n"],"file":"runtime.js"}