{"version":3,"sources":["../../lib/cluster/cluster.ts"],"names":["TimeoutError","Error","isTimeout","remove","array","object","index","indexOf","splice","Cluster","constructor","workers","require","template","task","callback","_execute","_workerCount","Math","max","os","cpus","length","_require","_template","start","_inactiveWorkers","_activeWorkers","_queue","async","queue","worker","ensureWorkers","code","signal","shutdown","clearWorkerTimeout","removeAllListeners","kill","total","i","forkWorker","send","initialize","push","path","join","__dirname","popWorker","setImmediate","shift","clearTimeout","executionTimeout","finishWorker","removeWorker","execute","context","timeout","item","Promise","resolve","reject","on","message","error","setTimeout","JSON","stringify"],"mappings":"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","sourcesContent":["import { fork, ChildProcess } from 'child_process';\nimport path from 'path';\nimport async from 'async';\nimport os from 'os';\nimport onExit from 'signal-exit';\n\nclass TimeoutError extends Error {\n  get isTimeout() {\n    return true;\n  }\n}\n\nfunction remove(array, object) {\n  const index = array.indexOf(object);\n\n  if (index > -1) {\n    array.splice(index, 1);\n  }\n}\n\ninterface Item {\n  code: string;\n  timeout: number;\n  context: any;\n}\n\nexport default class Cluster {\n  _workerCount: number;\n\n  _require: string;\n\n  _template: string;\n\n  _inactiveWorkers: ChildProcess[];\n\n  _activeWorkers: ChildProcess[];\n\n  _queue: async.AsyncQueue<Item>;\n\n  constructor(\n    { workers, require, template } =\n    { workers: null, require: null, template: null }\n  ) {\n    this._workerCount = workers || Math.max(os.cpus().length, 4);\n    this._require = require;\n    this._template = template;\n    this.start();\n  }\n\n  start() {\n    this._inactiveWorkers = [];\n    this._activeWorkers = [];\n    this._queue = async.queue(this.worker, this._workerCount);\n    this.ensureWorkers();\n\n    onExit((code, signal) => {\n      this.shutdown();\n    });\n  }\n\n  shutdown() {\n    for (const worker of this._inactiveWorkers) {\n      this.clearWorkerTimeout(worker);\n      worker.removeAllListeners();\n      worker.kill();\n    }\n\n    for (const worker of this._activeWorkers) {\n      this.clearWorkerTimeout(worker);\n      worker.removeAllListeners();\n      worker.kill();\n    }\n\n    this._inactiveWorkers = [];\n    this._activeWorkers = [];\n\n    if (this._queue) {\n      this._queue.kill();\n    }\n\n    this._queue = async.queue(this.worker, this._workerCount);\n  }\n\n  worker = (task, callback) => {\n    this._execute(task, callback);\n  };\n\n  ensureWorkers() {\n    const total = this._inactiveWorkers.length + this._activeWorkers.length;\n\n    for (let i = 0; i < this._workerCount - total; ++i) {\n      const worker = this.forkWorker();\n\n      worker.send({ initialize: true,\n                    require: this._require,\n                    template: this._template });\n\n      this._inactiveWorkers.push(worker);\n    }\n  }\n\n  forkWorker() {\n    return fork(path.join(__dirname, 'worker'));\n  }\n\n  popWorker(callback) {\n    this.ensureWorkers();\n\n    if (this._inactiveWorkers.length === 0) {\n      setImmediate(() => {\n        this.popWorker(callback);\n      });\n\n      return;\n    }\n\n    const worker = this._inactiveWorkers.shift();\n\n    this._activeWorkers.push(worker);\n\n    if (this._activeWorkers.length + this._inactiveWorkers.length !== this._workerCount) {\n      throw new Error('invalid worker count');\n    }\n\n    callback(worker);\n  }\n\n  clearWorkerTimeout(worker) {\n    clearTimeout(worker.executionTimeout);\n    worker.executionTimeout = null;\n  }\n\n  finishWorker(worker) {\n    this.clearWorkerTimeout(worker);\n    remove(this._activeWorkers, worker);\n    this._inactiveWorkers.push(worker);\n  }\n\n  removeWorker(worker) {\n    this.clearWorkerTimeout(worker);\n\n    worker.kill();\n    worker.removeAllListeners();\n\n    remove(this._activeWorkers, worker);\n    remove(this._inactiveWorkers, worker);\n\n    this.ensureWorkers();\n  }\n\n  execute({ code, context, timeout }) {\n    const item = {\n      code, timeout, context\n    };\n\n    return new Promise((resolve, reject) => {\n      this._queue.push(item, resolve);\n    });\n  }\n\n  _execute({ code, context, timeout }, callback) {\n    this.popWorker((worker) => {\n      worker.removeAllListeners();\n\n      worker.on('message', (message) => {\n        this.finishWorker(worker);\n\n        callback(message);\n      });\n\n      worker.on('error', (message) => {\n        this.removeWorker(worker);\n\n        callback({ error: new Error('worker error') });\n      });\n\n      worker.on('disconnect', () => {\n        this.removeWorker(worker);\n\n        callback({ error: new Error('worker disconnected') });\n      });\n\n      worker.on('exit', (message) => {\n        this.removeWorker(worker);\n      });\n\n      if (timeout > 0) {\n        worker.executionTimeout = setTimeout(() => {\n          // worker.kill();\n          this.removeWorker(worker);\n          callback({ error: new TimeoutError('timeout') });\n        }, timeout);\n      }\n\n      worker.send({ code, context: JSON.stringify(context || {}) });\n    });\n  }\n}\n"],"file":"cluster.js"}