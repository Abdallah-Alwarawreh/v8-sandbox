{"version":3,"sources":["../lib/index.js"],"names":["TimeoutError","Error","isTimeout","remove","array","object","index","indexOf","splice","SandboxCluster","constructor","options","task","callback","_execute","_workerCount","workers","Math","max","os","cpus","length","_require","require","_template","template","start","_inactiveWorkers","_activeWorkers","_queue","async","queue","worker","ensureWorkers","shutdown","removeAllListeners","kill","total","i","forkWorker","send","initialize","push","path","join","__dirname","popWorker","setImmediate","shift","clearWorkerTimeout","clearTimeout","executionTimeout","finishWorker","removeWorker","execute","code","context","timeout","item","Promise","resolve","reject","on","message","error","setTimeout","JSON","stringify"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;AAEA,MAAMA,YAAN,SAA2BC,KAA3B,CAAiC;AAC/B,MAAIC,SAAJ,GAAgB;AACd,WAAO,IAAP;AACD;;AAH8B;;AAMjC,SAASC,MAAT,CAAgBC,KAAhB,EAAuBC,MAAvB,EAA+B;AAC7B,QAAMC,KAAK,GAAGF,KAAK,CAACG,OAAN,CAAcF,MAAd,CAAd;;AAEA,MAAIC,KAAK,GAAG,CAAC,CAAb,EAAgB;AACdF,IAAAA,KAAK,CAACI,MAAN,CAAaF,KAAb,EAAoB,CAApB;AACD;AACF;;AAIc,MAAMG,cAAN,CAAqB;AAClCC,EAAAA,WAAW,CAACC,OAAO,GAAG,EAAX,EAAe;AAAA,oCAmCjB,CAACC,IAAD,EAAOC,QAAP,KAAoB;AAC3B,WAAKC,QAAL,CAAcF,IAAd,EAAoBC,QAApB;AACD,KArCyB;;AACxB,SAAKE,YAAL,GAAoBJ,OAAO,CAACK,OAAR,IAAmBC,IAAI,CAACC,GAAL,CAASC,YAAGC,IAAH,GAAUC,MAAnB,EAA2B,CAA3B,CAAvC;AACA,SAAKC,QAAL,GAAgBX,OAAO,CAACY,OAAxB;AACA,SAAKC,SAAL,GAAiBb,OAAO,CAACc,QAAzB;AACA,SAAKC,KAAL;AACD;;AAEDA,EAAAA,KAAK,GAAG;AACN,SAAKC,gBAAL,GAAwB,EAAxB;AACA,SAAKC,cAAL,GAAsB,EAAtB;AACA,SAAKC,MAAL,GAAcC,eAAMC,KAAN,CAAY,KAAKC,MAAjB,EAAyB,KAAKjB,YAA9B,CAAd;AACA,SAAKkB,aAAL;AACD;;AAEDC,EAAAA,QAAQ,GAAG;AACT,SAAK,MAAMF,MAAX,IAAqB,KAAKL,gBAA1B,EAA4C;AAC1CK,MAAAA,MAAM,CAACG,kBAAP;AACAH,MAAAA,MAAM,CAACI,IAAP;AACD;;AAED,SAAK,MAAMJ,MAAX,IAAqB,KAAKJ,cAA1B,EAA0C;AACxCI,MAAAA,MAAM,CAACG,kBAAP;AACAH,MAAAA,MAAM,CAACI,IAAP;AACD;;AAED,SAAKT,gBAAL,GAAwB,EAAxB;AACA,SAAKC,cAAL,GAAsB,EAAtB;;AAEA,QAAI,KAAKC,MAAT,EAAiB;AACf,WAAKA,MAAL,CAAYO,IAAZ;AACD;;AAED,SAAKP,MAAL,GAAcC,eAAMC,KAAN,CAAY,KAAKC,MAAjB,EAAyB,KAAKjB,YAA9B,CAAd;AACD;;AAMDkB,EAAAA,aAAa,GAAG;AACd,UAAMI,KAAK,GAAG,KAAKV,gBAAL,CAAsBN,MAAtB,GAA+B,KAAKO,cAAL,CAAoBP,MAAjE;;AAEA,SAAK,IAAIiB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKvB,YAAL,GAAoBsB,KAAxC,EAA+C,EAAEC,CAAjD,EAAoD;AAClD,YAAMN,MAAM,GAAG,KAAKO,UAAL,EAAf;AAEAP,MAAAA,MAAM,CAACQ,IAAP,CAAY;AAACC,QAAAA,UAAU,EAAE,IAAb;AACClB,QAAAA,OAAO,EAAE,KAAKD,QADf;AAECG,QAAAA,QAAQ,EAAE,KAAKD;AAFhB,OAAZ;;AAIA,WAAKG,gBAAL,CAAsBe,IAAtB,CAA2BV,MAA3B;AACD;AACF;;AAEDO,EAAAA,UAAU,GAAG;AACX,WAAO,yBAAKI,cAAKC,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAL,CAAP;AACD;;AAEDC,EAAAA,SAAS,CAACjC,QAAD,EAAW;AAClB,SAAKoB,aAAL;;AAEA,QAAI,KAAKN,gBAAL,CAAsBN,MAAtB,KAAiC,CAArC,EAAwC;AACtC0B,MAAAA,YAAY,CAAC,MAAM;AACjB,aAAKD,SAAL,CAAejC,QAAf;AACD,OAFW,CAAZ;AAIA;AACD;;AAED,UAAMmB,MAAM,GAAG,KAAKL,gBAAL,CAAsBqB,KAAtB,EAAf;;AAEA,SAAKpB,cAAL,CAAoBc,IAApB,CAAyBV,MAAzB;;AAEA,QAAI,KAAKJ,cAAL,CAAoBP,MAApB,GAA6B,KAAKM,gBAAL,CAAsBN,MAAnD,KAA8D,KAAKN,YAAvE,EAAqF;AACnF,YAAM,IAAId,KAAJ,CAAU,sBAAV,EACJ,SADI,EACO,KAAK2B,cAAL,CAAoBP,MAD3B,EAEJ,WAFI,EAES,KAAKM,gBAAL,CAAsBN,MAF/B,CAAN;AAGD;;AAEDR,IAAAA,QAAQ,CAACmB,MAAD,CAAR;AACD;;AAEDiB,EAAAA,kBAAkB,CAACjB,MAAD,EAAS;AACzBkB,IAAAA,YAAY,CAAClB,MAAM,CAACmB,gBAAR,CAAZ;AACAnB,IAAAA,MAAM,CAACmB,gBAAP,GAA0B,IAA1B;AACD;;AAEDC,EAAAA,YAAY,CAACpB,MAAD,EAAS;AACnB,SAAKiB,kBAAL,CAAwBjB,MAAxB;AACA7B,IAAAA,MAAM,CAAC,KAAKyB,cAAN,EAAsBI,MAAtB,CAAN;;AACA,SAAKL,gBAAL,CAAsBe,IAAtB,CAA2BV,MAA3B;AACD;;AAEDqB,EAAAA,YAAY,CAACrB,MAAD,EAAS;AACnB,SAAKiB,kBAAL,CAAwBjB,MAAxB;AACAA,IAAAA,MAAM,CAACG,kBAAP;AACAhC,IAAAA,MAAM,CAAC,KAAKyB,cAAN,EAAsBI,MAAtB,CAAN;AACA7B,IAAAA,MAAM,CAAC,KAAKwB,gBAAN,EAAwBK,MAAxB,CAAN;AACA,SAAKC,aAAL;AACD;;AAEDqB,EAAAA,OAAO,CAAC;AAACC,IAAAA,IAAD;AAAOC,IAAAA,OAAP;AAAgBC,IAAAA;AAAhB,GAAD,EAA2B;AAChC,UAAMC,IAAI,GAAG;AACXH,MAAAA,IADW;AACLE,MAAAA,OADK;AACID,MAAAA;AADJ,KAAb;AAIA,WAAO,IAAIG,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,WAAKhC,MAAL,CAAYa,IAAZ,CAAiBgB,IAAjB,EAAuBE,OAAvB;AACD,KAFM,CAAP;AAGD;;AAED9C,EAAAA,QAAQ,CAAC;AAACyC,IAAAA,IAAD;AAAOC,IAAAA,OAAP;AAAgBC,IAAAA;AAAhB,GAAD,EAA2B5C,QAA3B,EAAqC;AAC3C,SAAKiC,SAAL,CAAgBd,MAAD,IAAY;AACzBA,MAAAA,MAAM,CAACG,kBAAP;AAEAH,MAAAA,MAAM,CAAC8B,EAAP,CAAU,SAAV,EAAsBC,OAAD,IAAa;AAChC,aAAKX,YAAL,CAAkBpB,MAAlB;AAEAnB,QAAAA,QAAQ,CAACkD,OAAD,CAAR;AACD,OAJD;AAMA/B,MAAAA,MAAM,CAAC8B,EAAP,CAAU,OAAV,EAAoBC,OAAD,IAAa;AAC9B,aAAKV,YAAL,CAAkBrB,MAAlB;AAEAnB,QAAAA,QAAQ,CAAC;AAACmD,UAAAA,KAAK,EAAE,IAAI/D,KAAJ,CAAU,cAAV;AAAR,SAAD,CAAR;AACD,OAJD;AAMA+B,MAAAA,MAAM,CAAC8B,EAAP,CAAU,YAAV,EAAwB,MAAM;AAC5B,aAAKT,YAAL,CAAkBrB,MAAlB;AAEAnB,QAAAA,QAAQ,CAAC;AAACmD,UAAAA,KAAK,EAAE,IAAI/D,KAAJ,CAAU,qBAAV;AAAR,SAAD,CAAR;AACD,OAJD;AAMA+B,MAAAA,MAAM,CAAC8B,EAAP,CAAU,MAAV,EAAmBC,OAAD,IAAa;AAC7B,aAAKV,YAAL,CAAkBrB,MAAlB;AACD,OAFD;;AAIA,UAAIyB,OAAO,GAAG,CAAd,EAAiB;AACfzB,QAAAA,MAAM,CAACmB,gBAAP,GAA0Bc,UAAU,CAAC,MAAM;AACzC,eAAKZ,YAAL,CAAkBrB,MAAlB;AACAA,UAAAA,MAAM,CAACI,IAAP;AACAvB,UAAAA,QAAQ,CAAC;AAACmD,YAAAA,KAAK,EAAE,IAAIhE,YAAJ,CAAiB,SAAjB;AAAR,WAAD,CAAR;AACD,SAJmC,EAIjCyD,OAJiC,CAApC;AAKD;;AAEDzB,MAAAA,MAAM,CAACQ,IAAP,CAAY;AAACe,QAAAA,IAAD;AAAOC,QAAAA,OAAO,EAAEU,IAAI,CAACC,SAAL,CAAeX,OAAO,IAAI,EAA1B;AAAhB,OAAZ;AACD,KAlCD;AAmCD;;AAnJiC","sourcesContent":["import {fork} from 'child_process';\nimport path from 'path';\nimport async from 'async';\nimport os from 'os';\nimport Sandbox from './sandbox';\n\nclass TimeoutError extends Error {\n  get isTimeout() {\n    return true;\n  }\n}\n\nfunction remove(array, object) {\n  const index = array.indexOf(object);\n\n  if (index > -1) {\n    array.splice(index, 1);\n  }\n}\n\nexport { Sandbox };\n\nexport default class SandboxCluster {\n  constructor(options = {}) {\n    this._workerCount = options.workers || Math.max(os.cpus().length, 4);\n    this._require = options.require;\n    this._template = options.template;\n    this.start();\n  }\n\n  start() {\n    this._inactiveWorkers = [];\n    this._activeWorkers = [];\n    this._queue = async.queue(this.worker, this._workerCount);\n    this.ensureWorkers();\n  }\n\n  shutdown() {\n    for (const worker of this._inactiveWorkers) {\n      worker.removeAllListeners();\n      worker.kill();\n    }\n\n    for (const worker of this._activeWorkers) {\n      worker.removeAllListeners();\n      worker.kill();\n    }\n\n    this._inactiveWorkers = [];\n    this._activeWorkers = [];\n\n    if (this._queue) {\n      this._queue.kill();\n    }\n\n    this._queue = async.queue(this.worker, this._workerCount);\n  }\n\n  worker = (task, callback) => {\n    this._execute(task, callback);\n  }\n\n  ensureWorkers() {\n    const total = this._inactiveWorkers.length + this._activeWorkers.length;\n\n    for (let i = 0; i < this._workerCount - total; ++i) {\n      const worker = this.forkWorker();\n\n      worker.send({initialize: true,\n                   require: this._require,\n                   template: this._template});\n\n      this._inactiveWorkers.push(worker);\n    }\n  }\n\n  forkWorker() {\n    return fork(path.join(__dirname, 'worker'));\n  }\n\n  popWorker(callback) {\n    this.ensureWorkers();\n\n    if (this._inactiveWorkers.length === 0) {\n      setImmediate(() => {\n        this.popWorker(callback);\n      });\n\n      return;\n    }\n\n    const worker = this._inactiveWorkers.shift();\n\n    this._activeWorkers.push(worker);\n\n    if (this._activeWorkers.length + this._inactiveWorkers.length !== this._workerCount) {\n      throw new Error('invalid worker count',\n        'active:', this._activeWorkers.length,\n        'inactive:', this._inactiveWorkers.length);\n    }\n\n    callback(worker);\n  }\n\n  clearWorkerTimeout(worker) {\n    clearTimeout(worker.executionTimeout);\n    worker.executionTimeout = null;\n  }\n\n  finishWorker(worker) {\n    this.clearWorkerTimeout(worker);\n    remove(this._activeWorkers, worker);\n    this._inactiveWorkers.push(worker);\n  }\n\n  removeWorker(worker) {\n    this.clearWorkerTimeout(worker);\n    worker.removeAllListeners();\n    remove(this._activeWorkers, worker);\n    remove(this._inactiveWorkers, worker);\n    this.ensureWorkers();\n  }\n\n  execute({code, context, timeout}) {\n    const item = {\n      code, timeout, context\n    };\n\n    return new Promise((resolve, reject) => {\n      this._queue.push(item, resolve);\n    });\n  }\n\n  _execute({code, context, timeout}, callback) {\n    this.popWorker((worker) => {\n      worker.removeAllListeners();\n\n      worker.on('message', (message) => {\n        this.finishWorker(worker);\n\n        callback(message);\n      });\n\n      worker.on('error', (message) => {\n        this.removeWorker(worker);\n\n        callback({error: new Error('worker error')});\n      });\n\n      worker.on('disconnect', () => {\n        this.removeWorker(worker);\n\n        callback({error: new Error('worker disconnected')});\n      });\n\n      worker.on('exit', (message) => {\n        this.removeWorker(worker);\n      });\n\n      if (timeout > 0) {\n        worker.executionTimeout = setTimeout(() => {\n          this.removeWorker(worker);\n          worker.kill();\n          callback({error: new TimeoutError('timeout')});\n        }, timeout);\n      }\n\n      worker.send({code, context: JSON.stringify(context || {})});\n    });\n  }\n}\n"],"file":"index.js"}