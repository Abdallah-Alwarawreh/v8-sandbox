{"version":3,"sources":["../lib/index.js"],"names":["TimeoutError","Error","isTimeout","remove","array","object","index","indexOf","splice","Sandbox","constructor","options","worker","task","callback","_execute","code","timeout","_workerCount","workers","start","_inactiveWorkers","_activeWorkers","_queue","queue","ensureWorkers","shutdown","removeAllListeners","kill","total","length","i","push","forkWorker","join","__dirname","popWorker","setTimeout","shift","finishWorker","clearTimeout","executionTimeout","removeWorker","execute","item","promise","itemResolve","itemReject","Promise","resolve","reject","err","value","on","message","send"],"mappings":"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","file":"index.js","sourcesContent":["import {fork} from 'child_process';\nimport path from 'path';\nimport async from 'async';\n\nclass TimeoutError extends Error {\n  get isTimeout() {\n    return true;\n  }\n}\n\nfunction remove(array, object) {\n  const index = array.indexOf(object);\n\n  if (index > -1) {\n    array.splice(index, 1);\n  }\n}\n\nexport default class Sandbox {\n  constructor(options = {}) {\n    this._workerCount = options.workers || 4;\n    this.start();\n  }\n\n  start() {\n    this._inactiveWorkers = [];\n    this._activeWorkers = [];\n    this._queue = async.queue(this.worker, this._workerCount);\n    this.ensureWorkers();\n  }\n\n  shutdown() {\n    for (const worker of this._inactiveWorkers) {\n      worker.removeAllListeners();\n      worker.kill();\n    }\n\n    for (const worker of this._activeWorkers) {\n      worker.removeAllListeners();\n      worker.kill();\n    }\n\n    this._inactiveWorkers = [];\n    this._activeWorkers = [];\n\n    if (this._queue) {\n      this._queue.kill();\n    }\n\n    this._queue = async.queue(this.worker, this._workerCount);\n  }\n\n  worker = (task, callback) => {\n    this._execute(task.code, task.timeout, callback);\n  }\n\n  ensureWorkers() {\n    const total = this._inactiveWorkers.length + this._activeWorkers;\n\n    for (let i = 0; i < this._workerCount - total; ++i) {\n      this._inactiveWorkers.push(this.forkWorker());\n    }\n  }\n\n  forkWorker() {\n    return fork(path.join(__dirname, 'worker'));\n  }\n\n  popWorker(callback) {\n    this.ensureWorkers();\n\n    if (this._inactiveWorkers.length === 0) {\n      setTimeout(() => {\n        this.popWorker(callback);\n      }, 1);\n\n      return;\n    }\n\n    const worker = this._inactiveWorkers.shift();\n    this._activeWorkers.push(worker);\n\n    if (this._activeWorkers.length + this._inactiveWorkers.length !== this._workerCount) {\n      throw new Error('invalid worker count');\n    }\n\n    callback(worker);\n  }\n\n  finishWorker(worker) {\n    clearTimeout(worker.executionTimeout);\n    worker.executionTimeout = null;\n    remove(this._activeWorkers, worker);\n    this._inactiveWorkers.push(worker);\n  }\n\n  removeWorker(worker) {\n    clearTimeout(worker.executionTimeout);\n    worker.executionTimeout = null;\n    remove(this._activeWorkers, worker);\n    remove(this._inactiveWorkers, worker);\n    this.ensureWorkers();\n  }\n\n  execute(code, timeout, callback) {\n    const item = {\n      code, timeout\n    };\n\n    let promise = null;\n\n    if (callback == null) {\n      let itemResolve = null;\n      let itemReject = null;\n\n      promise = new Promise((resolve, reject) => {\n        itemResolve = resolve;\n        itemReject = reject;\n      });\n\n      callback = (err, value) => {\n        if (err) {\n          return itemReject(value);\n        }\n\n        return itemResolve(value);\n      };\n    }\n\n    this._queue.push(item, callback);\n\n    return promise;\n  }\n\n  _execute(code, timeout, callback) {\n    this.popWorker((worker) => {\n      worker.removeAllListeners();\n\n      worker.on('message', (message) => {\n        this.finishWorker(worker);\n        callback(message.err, message.value);\n      });\n\n      worker.on('error', (message) => {\n        this.removeWorker(worker);\n      });\n\n      worker.on('disconnect', () => {\n        this.removeWorker(worker);\n      });\n\n      worker.on('exit', (message) => {\n        this.removeWorker(worker);\n      });\n\n      if (timeout > 0) {\n        worker.executionTimeout = setTimeout(() => {\n          this.removeWorker(worker);\n          worker.kill();\n          callback(new TimeoutError('timeout'));\n        }, timeout);\n      }\n\n      worker.send({code});\n    });\n  }\n}\n"]}