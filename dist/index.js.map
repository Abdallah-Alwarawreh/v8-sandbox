{"version":3,"sources":["../lib/index.js"],"names":["TimeoutError","Error","isTimeout","remove","array","object","index","indexOf","splice","Sandbox","constructor","options","worker","task","callback","_execute","_workerCount","workers","Math","max","cpus","length","_require","require","start","_inactiveWorkers","_activeWorkers","_queue","queue","ensureWorkers","shutdown","removeAllListeners","kill","total","i","forkWorker","send","push","join","__dirname","popWorker","setTimeout","shift","finishWorker","clearTimeout","executionTimeout","removeWorker","execute","code","context","timeout","item","promise","itemResolve","itemReject","Promise","resolve","reject","err","value","on","message","JSON","stringify"],"mappings":"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","file":"index.js","sourcesContent":["import {fork} from 'child_process';\nimport path from 'path';\nimport async from 'async';\nimport os from 'os';\n\nclass TimeoutError extends Error {\n  get isTimeout() {\n    return true;\n  }\n}\n\nfunction remove(array, object) {\n  const index = array.indexOf(object);\n\n  if (index > -1) {\n    array.splice(index, 1);\n  }\n}\n\nexport default class Sandbox {\n  constructor(options = {}) {\n    this._workerCount = options.workers || Math.max(os.cpus().length, 4);\n    this._require = options.require;\n    this.start();\n  }\n\n  start() {\n    this._inactiveWorkers = [];\n    this._activeWorkers = [];\n    this._queue = async.queue(this.worker, this._workerCount);\n    this.ensureWorkers();\n  }\n\n  shutdown() {\n    for (const worker of this._inactiveWorkers) {\n      worker.removeAllListeners();\n      worker.kill();\n    }\n\n    for (const worker of this._activeWorkers) {\n      worker.removeAllListeners();\n      worker.kill();\n    }\n\n    this._inactiveWorkers = [];\n    this._activeWorkers = [];\n\n    if (this._queue) {\n      this._queue.kill();\n    }\n\n    this._queue = async.queue(this.worker, this._workerCount);\n  }\n\n  worker = (task, callback) => {\n    this._execute(task, callback);\n  }\n\n  ensureWorkers() {\n    const total = this._inactiveWorkers.length + this._activeWorkers;\n\n    for (let i = 0; i < this._workerCount - total; ++i) {\n      const worker = this.forkWorker();\n\n      if (this._require) {\n        worker.send({require: this._require});\n      }\n\n      this._inactiveWorkers.push(worker);\n    }\n  }\n\n  forkWorker() {\n    return fork(path.join(__dirname, 'worker'));\n  }\n\n  popWorker(callback) {\n    this.ensureWorkers();\n\n    if (this._inactiveWorkers.length === 0) {\n      setTimeout(() => {\n        this.popWorker(callback);\n      }, 1);\n\n      return;\n    }\n\n    const worker = this._inactiveWorkers.shift();\n    this._activeWorkers.push(worker);\n\n    if (this._activeWorkers.length + this._inactiveWorkers.length !== this._workerCount) {\n      throw new Error('invalid worker count');\n    }\n\n    callback(worker);\n  }\n\n  finishWorker(worker) {\n    clearTimeout(worker.executionTimeout);\n    worker.executionTimeout = null;\n    remove(this._activeWorkers, worker);\n    this._inactiveWorkers.push(worker);\n  }\n\n  removeWorker(worker) {\n    clearTimeout(worker.executionTimeout);\n    worker.executionTimeout = null;\n    worker.removeAllListeners();\n    remove(this._activeWorkers, worker);\n    remove(this._inactiveWorkers, worker);\n    this.ensureWorkers();\n  }\n\n  execute({code, context, timeout}, callback) {\n    const item = {\n      code, timeout, context\n    };\n\n    let promise = null;\n\n    if (callback == null) {\n      let itemResolve = null;\n      let itemReject = null;\n\n      promise = new Promise((resolve, reject) => {\n        itemResolve = resolve;\n        itemReject = reject;\n      });\n\n      callback = (err, value) => {\n        if (err) {\n          return itemReject(err);\n        }\n\n        return itemResolve(value);\n      };\n    }\n\n    this._queue.push(item, callback);\n\n    return promise;\n  }\n\n  _execute({code, context, timeout}, callback) {\n    this.popWorker((worker) => {\n      worker.removeAllListeners();\n\n      worker.on('message', (message) => {\n        this.finishWorker(worker);\n        callback(message.err, message.value);\n      });\n\n      worker.on('error', (message) => {\n        this.removeWorker(worker);\n      });\n\n      worker.on('disconnect', () => {\n        this.removeWorker(worker);\n      });\n\n      worker.on('exit', (message) => {\n        this.removeWorker(worker);\n      });\n\n      if (timeout > 0) {\n        worker.executionTimeout = setTimeout(() => {\n          this.removeWorker(worker);\n          worker.kill();\n          callback(new TimeoutError('timeout'));\n        }, timeout);\n      }\n\n      worker.send({code, context: JSON.stringify(context || {})});\n    });\n  }\n}\n"]}