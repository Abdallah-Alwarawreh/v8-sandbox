{"version":3,"sources":["../lib/runtime.js"],"names":["global","_try","func","ex","setResult","error","name","message","stack","_execute","eval","_code","dispatchSync","args","parameters","JSON","stringify","result","_dispatchSync","apply","value","parse","Error","dispatchAsync","callback","wrappedCallback","push","_dispatchAsync","httpRequest","options","_httpRequest","response","_setResult","setTimeout","timeout","handler","_setTimeout","clearTimeout","id","_clearTimeout","console","log","_log","_error","define","defineBlocking","defineAsync","pop"],"mappings":"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","sourcesContent":["global._try = (func) => {\n  try {\n    func();\n  } catch (ex) {\n    global.setResult({\n      error: {\n        name: ex.name,\n        message: ex.message,\n        stack: ex.stack\n      }\n    });\n  }\n};\n\nglobal._execute = () => {\n  global._try(() => {\n    eval(global._code);\n  });\n};\n\nglobal.dispatchSync = (name, args) => {\n  const parameters = [ JSON.stringify([ name, ...(args || []) ]) ];\n\n  const result = global._dispatchSync.apply(global, parameters);\n\n  if (result == null) {\n    return null;\n  }\n\n  const [error, value] = JSON.parse(result);\n\n  if (error) {\n    throw new Error(error.message);\n  }\n\n  return value;\n}\n\nglobal.dispatchAsync = (name, args, callback) => {\n  if (typeof callback !== 'function') {\n    callback = () => {};\n  }\n\n  const parameters = [ JSON.stringify([ name, ...(args || []) ]) ];\n\n  const wrappedCallback = (args) => {\n    global._try(() => {\n      callback.apply(null, JSON.parse(args));\n    });\n  };\n\n  parameters.push(wrappedCallback);\n\n  const result = global._dispatchAsync.apply(global, parameters);\n\n  return result != null ? JSON.parse(result) : null;\n}\n\nglobal.httpRequest = (options, callback) => {\n  const parameters = [ JSON.stringify([ options ]) ];\n\n  if (callback) {\n    const wrappedCallback = (args) => {\n      global._try(() => {\n        callback.apply(null, JSON.parse(args));\n      });\n    };\n\n    parameters.push(wrappedCallback);\n  }\n\n  const result = global._httpRequest.apply(global, parameters);\n\n  if (result == null) {\n    return null;\n  }\n\n  const [error, response] = JSON.parse(result);\n\n  if (!callback && error) {\n    throw new Error(error.message);\n  }\n\n  return response;\n};\n\nglobal.setResult = (result) => {\n  return global._setResult(result != null ? JSON.stringify(result) : null);\n};\n\nglobal.setTimeout = (callback, timeout) => {\n  const handler = () => {\n    global._try(callback);\n  };\n\n  return global._setTimeout(handler, timeout);\n};\n\nglobal.clearTimeout = (id) => {\n  return global._clearTimeout(id);\n};\n\nglobal.console = {\n  log: (...args) => {\n    global._log(JSON.stringify(args));\n  },\n  error: (...args) => {\n    global._error(JSON.stringify(args));\n  }\n};\n\nglobal.define = (name) => {\n  global[name] = (...args) => {\n    return global.dispatchSync(name, args);\n  };\n};\n\nglobal.defineBlocking = global.define;\n\nglobal.defineAsync = (name) => {\n  global[name] = (...args) => {\n    const callback = args.pop();\n\n    return global.dispatchAsync(name, args, callback);\n  };\n};\n"],"file":"runtime.js"}