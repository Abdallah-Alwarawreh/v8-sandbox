{"version":3,"sources":["../lib/runtime.js"],"names":["global","_tryCallback","func","ex","setResult","error","name","message","stack","_execute","eval","_code","dispatchSync","args","parameters","JSON","stringify","result","_dispatchSync","apply","parse","dispatchAsync","callback","wrappedCallback","push","_dispatchAsync","httpRequest","options","_httpRequest","_setResult","setTimeout","timeout","handler","_setTimeout","clearTimeout","id","_clearTimeout","console","log","_log","_error"],"mappings":"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","file":"runtime.js","sourcesContent":["global._tryCallback = (func) => {\n  try {\n    func();\n  } catch (ex) {\n    global.setResult({\n      error: {\n        name: ex.name,\n        message: ex.message,\n        stack: ex.stack\n      }\n    });\n  }\n};\n\nglobal._execute = () => {\n  global._tryCallback(() => {\n    eval(global._code);\n  });\n};\n\nglobal.dispatchSync = (name, args) => {\n  const parameters = [ JSON.stringify([ name, ...args ]) ];\n\n  const result = global._dispatchSync.apply(global, parameters);\n\n  return result != null ? JSON.parse(result) : null;\n}\n\nglobal.dispatchAsync = (name, args, callback) => {\n  if (typeof callback !== 'function') {\n    callback = () => {};\n  }\n\n  const parameters = [ JSON.stringify([ name, ...args ]) ];\n\n  const wrappedCallback = (args) => {\n    global._tryCallback(() => {\n      callback.apply(null, JSON.parse(args));\n    });\n  };\n\n  parameters.push(wrappedCallback);\n\n  const result = global._dispatchAsync.apply(global, parameters);\n\n  return result != null ? JSON.parse(result) : null;\n}\n\nglobal.httpRequest = (options, callback) => {\n  const parameters = [ JSON.stringify([ options ]) ];\n\n  if (callback) {\n    const wrappedCallback = (args) => {\n      global._tryCallback(() => {\n        callback.apply(null, JSON.parse(args));\n      });\n    };\n\n    parameters.push(wrappedCallback);\n  }\n\n  const result = global._httpRequest.apply(global, parameters);\n\n  return result != null ? JSON.parse(result) : null;\n};\n\nglobal.setResult = (result) => {\n  return global._setResult(result != null ? JSON.stringify(result) : null);\n};\n\nglobal.setTimeout = (callback, timeout) => {\n  const handler = () => {\n    global._tryCallback(callback);\n  };\n\n  return global._setTimeout(handler, timeout);\n};\n\nglobal.clearTimeout = (id) => {\n  return global._clearTimeout(id);\n};\n\nglobal.console = {\n  log: (...args) => {\n    global._log(JSON.stringify(args));\n  },\n  error: (...args) => {\n    global._error(JSON.stringify(args));\n  }\n};\n"]}