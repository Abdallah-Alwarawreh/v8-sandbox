{"version":3,"sources":["../lib/sandbox.js"],"names":["NativeSandbox","require","Sandbox","RUNTIME","fs","readFileSync","path","join","__dirname","toString","LINECOUNT","split","length","tryParseJSON","value","JSON","parse","ex","SYNC_FUNCTIONS","ASYNC_FUNCTIONS","constructor","template","native","load","global","define","bind","defineAsync","syncFunctions","asyncFunctions","name","fn","defines","Object","entries","map","initialize","Promise","resolve","reject","output","code","json","result","setImmediate","error","lineNumber","dispatch","eval","execute","finalize","callback","Error","invocation","finish","err","results","serialized","message","push","apply","stringify","parameters","args","dispatchSync","dispatchAsync","httpRequest","log","write","type","console","time","Date","util","format","options","response","body","Buffer","isBuffer","slice"],"mappings":"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","sourcesContent":["import fs from 'fs';\nimport path from 'path';\nimport request from 'request';\nimport util from 'util';\n\nconst NativeSandbox = require('bindings')('sandbox').Sandbox;\n\nconst RUNTIME = fs.readFileSync(path.join(__dirname, 'runtime.js')).toString();\nconst LINECOUNT = RUNTIME.split('\\n').length;\n\nfunction tryParseJSON(value) {\n  try {\n    return JSON.parse(value);\n  } catch (ex) {\n    return null;\n  }\n}\n\nconst SYNC_FUNCTIONS = {};\n\nconst ASYNC_FUNCTIONS = {};\n\nexport default class Sandbox {\n  constructor({require, template} = {}) {\n    this.native = new NativeSandbox();\n    this.require = require;\n    this.template = template;\n    this.load();\n  }\n\n  load() {\n    global.define = this.define.bind(this);\n    global.defineAsync = this.defineAsync.bind(this);\n\n    this.syncFunctions = {};\n    this.asyncFunctions = {};\n\n    if (this.require) {\n      this.syncFunctions = SYNC_FUNCTIONS[this.require] = SYNC_FUNCTIONS[this.require] || {}\n      this.asyncFunctions = ASYNC_FUNCTIONS[this.require] = ASYNC_FUNCTIONS[this.require] || {}\n\n      require(this.require);\n    }\n  }\n\n  define(name, fn) {\n    this.syncFunctions[name] = fn;\n  }\n\n  defineAsync(name, fn) {\n    this.asyncFunctions[name] = fn;\n  }\n\n  defines() {\n    return [\n      ...Object.entries(this.syncFunctions).map(([name, fn]) => `define('${name}');\\n`),\n      ...Object.entries(this.asyncFunctions).map(([name, fn]) => `defineAsync('${name}');\\n`)\n    ];\n  }\n\n  initialize() {\n    return new Promise((resolve, reject) => {\n      this.output = [];\n\n      const defines = this.defines();\n\n      const code = RUNTIME + '\\n' + this.defines().join('\\n') + this.template;\n\n      this.native.initialize(code, (json) => {\n        const result = tryParseJSON(json);\n\n        setImmediate(() => {\n          if (result && result.error) {\n            if (result.error.lineNumber != null) {\n              result.error.lineNumber -= (LINECOUNT + defines.length);\n            }\n\n            reject(result.error);\n          } else {\n            resolve(result && result.value);\n          }\n        });\n      }, this.dispatch.bind(this));\n    });\n  }\n\n  async eval(code) {\n    await this.initialize();\n\n    const result = await this.execute(code);\n\n    await this.finalize();\n\n    return {...result, output: this.output};\n  }\n\n  execute(code, callback) {\n    return new Promise((resolve, reject) => {\n      this.native.execute(code, (json) => {\n        let result = tryParseJSON(json);\n\n        if (result == null) {\n          result = { error: new Error('no result'), output: this.output };\n        }\n\n        setImmediate(() => {\n          resolve({...result, output: this.output});\n        });\n      }, this.dispatch.bind(this));\n    });\n  }\n\n  finalize() {\n    return new Promise((resolve) => {\n      this.native.finalize(() => {\n        setImmediate(resolve);\n      }, this.dispatch.bind(this));\n    });\n  }\n\n  // handle function calls from the sandbox\n  dispatch(invocation) {\n    const finish = (err, ...results) => {\n      const serialized = [\n        err != null ? {message: err.message} : null\n      ];\n\n      if (results && results.length) {\n        serialized.push.apply(serialized, results);\n      }\n\n      invocation.callback(invocation, JSON.stringify(serialized));\n    };\n\n    const parameters = tryParseJSON(invocation.args);\n\n    if (parameters == null) {\n      return finish(new Error('invalid invocation parameters'));\n    }\n\n    if (invocation.name === 'dispatchSync') {\n      return this.dispatchSync(parameters, finish);\n    } else if (invocation.name === 'dispatchAsync') {\n      return this.dispatchAsync(parameters, finish);\n    } else if (invocation.name === 'httpRequest') {\n      return this.httpRequest(...parameters, finish);\n    } else if (invocation.name === 'log') {\n      this.log(...parameters);\n      return finish(null);\n    } else if (invocation.name === 'error') {\n      this.error(...parameters);\n      return finish(null);\n    }\n\n    return finish(null);\n  }\n\n  log(...args) {\n    this.write({type: 'log', args});\n    console.log(...args);\n  }\n\n  error(...args) {\n    this.write({type: 'error', args});\n    console.error(...args);\n  }\n\n  write({type, args}) {\n    this.output.push({type, time: new Date(), message: util.format(...args)});\n  }\n\n  httpRequest(options, callback) {\n    request(options, (err, response, body) => {\n      if (response && Buffer.isBuffer(response.body)) {\n        response.body = body = response.body.toString('base64');\n      }\n\n      callback(err, response, body);\n    });\n  }\n\n  dispatchSync(args, callback) {\n    try {\n      const name = args[0];\n      const parameters = args.slice(1);\n      const fn = name && this.syncFunctions[name];\n\n      if (!fn) {\n        return callback(new Error(`function named '${name}' does not exist`));\n      }\n\n      callback(null, fn(...parameters));\n    } catch (err) {\n      callback(err);\n    }\n  }\n\n  dispatchAsync(args, callback) {\n    try {\n      const name = args[0];\n      const parameters = args.slice(1);\n      const fn = name && this.asyncFunctions[name];\n\n      if (!fn) {\n        return callback(new Error(`function named '${name}' does not exist`));\n      }\n\n      fn(...[ ...parameters, callback ]);\n    } catch (err) {\n      callback(err);\n    }\n  }\n}\n"],"file":"sandbox.js"}