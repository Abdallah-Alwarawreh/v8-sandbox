{"version":3,"sources":["../../lib/server/functions.ts"],"names":["SYNC_FUNCTIONS","ASYNC_FUNCTIONS","Functions","constructor","sandbox","require","httpEnabled","timersEnabled","name","fn","syncFunctions","asyncFunctions","timers","setup","global","define","defineAsync","defines","Object","entries","map","clearTimers","id","timer","clear","dispatch","args","message","fail","respond","callback","params","setResult","httpRequest","setTimeout","clearTimeout","log","error","Error","result","finish","timeout","Timer","start","timerID","options","processRequestOptions","err","response","body","Buffer","isBuffer","toString","write","type","console","output","push","time","Date","util","format"],"mappings":"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","sourcesContent":["import Sandbox from './sandbox';\nimport Timer from './timer';\nimport request from 'request';\nimport util from 'util';\n\nconst SYNC_FUNCTIONS = {};\n\nconst ASYNC_FUNCTIONS = {};\n\ninterface Timers {\n  [key: string]: Timer;\n}\n\ninterface CustomFunctions {\n  [key: string]: Function;\n}\n\nexport default class Functions {\n  sandbox: Sandbox;\n\n  require: string;\n\n  httpEnabled: boolean;\n\n  timersEnabled: boolean;\n\n  timers: Timers;\n\n  syncFunctions: CustomFunctions;\n\n  asyncFunctions: CustomFunctions;\n\n  constructor(sandbox, { require, httpEnabled, timersEnabled }) {\n    this.sandbox = sandbox;\n    this.require = require;\n    this.httpEnabled = httpEnabled ?? true;\n    this.timersEnabled = timersEnabled ?? true;\n    this.timers = {};\n\n    this.setup();\n  }\n\n  setup() {\n    global.define = this.define;\n    global.defineAsync = this.defineAsync;\n\n    this.syncFunctions = {};\n    this.asyncFunctions = {};\n\n    if (this.require) {\n      this.syncFunctions = SYNC_FUNCTIONS[this.require] = SYNC_FUNCTIONS[this.require] || {};\n      this.asyncFunctions = ASYNC_FUNCTIONS[this.require] = ASYNC_FUNCTIONS[this.require] || {};\n\n      // eslint-disable-next-line global-require\n      require(this.require);\n    }\n  }\n\n  define = (name, fn) => {\n    this.syncFunctions[name] = fn;\n  };\n\n  defineAsync = (name, fn) => {\n    this.asyncFunctions[name] = fn;\n  };\n\n  defines() {\n    return [\n      ...Object.entries(this.syncFunctions).map(([ name ]) => `define('${name}');\\n`),\n      ...Object.entries(this.asyncFunctions).map(([ name ]) => `defineAsync('${name}');\\n`)\n    ];\n  }\n\n  clearTimers() {\n    for (const [ id, timer ] of Object.entries(this.timers)) {\n      timer.clear();\n      delete this.timers[id];\n    }\n  }\n\n  dispatch({ name, args }, { message, fail, respond, callback }) {\n    const params: [ any, any ] = [ args, { message, respond, fail, callback } ];\n\n    switch (name) {\n      case 'setResult': {\n        return this.setResult(...params);\n      }\n      case 'httpRequest': {\n        return this.httpRequest(...params);\n      }\n      case 'setTimeout': {\n        return this.setTimeout(...params);\n      }\n      case 'clearTimeout': {\n        return this.clearTimeout(...params);\n      }\n      case 'log': {\n        return this.log(...params);\n      }\n      case 'error': {\n        return this.error(...params);\n      }\n      default: {\n        const fn = this.syncFunctions[name] || this.asyncFunctions[name];\n\n        if (fn) {\n          fn(...params);\n        } else {\n          throw new Error(`${ name } is not a valid method`);\n        }\n      }\n    }\n  }\n\n  setResult([ result ], { message, respond }) {\n    this.sandbox.finish(result);\n\n    respond();\n  }\n\n  setTimeout([ timeout ], { fail, respond, callback }) {\n    if (!this.timersEnabled) {\n      return fail(new Error('setTimeout is disabled'));\n    }\n\n    const timer = new Timer();\n\n    timer.start(timeout || 0, callback);\n\n    const id = timer.id;\n\n    this.timers[id] = timer;\n\n    respond(id);\n  }\n\n  clearTimeout([ timerID ], { fail, respond }) {\n    if (!this.timersEnabled) {\n      return fail(new Error('clearTimeout is disabled'));\n    }\n\n    const timer = this.timers[+timerID];\n\n    if (timer) {\n      timer.clear();\n      delete this.timers[+timerID];\n    }\n\n    respond();\n  }\n\n  httpRequest([ options ], { respond, fail, callback }) {\n    if (!this.httpEnabled) {\n      return fail(new Error('httpRequest is disabled'));\n    }\n\n    options = options || {};\n\n    request(this.processRequestOptions(options), (err, response, body) => {\n      if (response && Buffer.isBuffer(response.body)) {\n        response.body = body = response.body.toString('base64');\n      }\n\n      if (!callback) {\n        if (err) {\n          fail(err);\n        } else {\n          respond(response);\n        }\n      } else {\n        callback(err, response, body);\n      }\n    });\n\n    if (callback) {\n      respond();\n    }\n  }\n\n  log([ args ], { message, respond, callback }) {\n    this.write({ message, type: 'log', args });\n    console.log(...args);\n    respond();\n  }\n\n  error([ args ], { message, respond, callback }) {\n    this.write({ message, type: 'error', args });\n    console.error(...args);\n    respond();\n  }\n\n  write({ message, type, args }) {\n    message.output.push({ type, time: new Date(), message: util.format(...args) });\n  }\n\n  processRequestOptions(options) {\n    return options;\n  }\n}\n"],"file":"functions.js"}