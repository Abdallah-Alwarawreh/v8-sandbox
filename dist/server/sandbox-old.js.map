{"version":3,"sources":["../../lib/server/sandbox-old.ts"],"names":["SYNC_FUNCTIONS","ASYNC_FUNCTIONS","Sandbox","constructor","template","require","timers","setup","host","kill","Host","global","define","bind","defineAsync","syncFunctions","asyncFunctions","name","fn","defines","Object","entries","map","initialize","timeout","execute","code","context","shutdown","callback","clearTimers","finish","result","item","output","id","timer","clear","dispatch","args","fail","respond","params","setResult","httpRequest","setTimeout","clearTimeout","log","error","Error","next","Timer","start","timerID","options","processRequestOptions","err","response","body","Buffer","isBuffer","toString","write","type","console","push","time","Date","message","util","format"],"mappings":"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","sourcesContent":["import util from 'util';\nimport request from 'request';\nimport Host, { Log } from './host';\nimport Timer from './timer';\n\nconst SYNC_FUNCTIONS = {};\n\nconst ASYNC_FUNCTIONS = {};\n\ninterface Timers {\n  [key: string]: Timer;\n}\n\ninterface Functions {\n  [key: string]: Function;\n}\n\nexport default class Sandbox {\n  template: string;\n\n  require: string;\n\n  host: Host;\n\n  timers: Timers;\n\n  syncFunctions: Functions;\n\n  asyncFunctions: Functions;\n\n  constructor(\n    { template, require } =\n    { template: null, require: null }\n  ) {\n    this.template = template || '';\n    this.require = require;\n    this.timers = {};\n    this.setup();\n  }\n\n  setup() {\n    if (this.host) {\n      this.host.kill();\n    }\n\n    this.host = new Host();\n\n    global.define = this.define.bind(this);\n    global.defineAsync = this.defineAsync.bind(this);\n\n    this.syncFunctions = {};\n    this.asyncFunctions = {};\n\n    if (this.require) {\n      this.syncFunctions = SYNC_FUNCTIONS[this.require] = SYNC_FUNCTIONS[this.require] || {};\n      this.asyncFunctions = ASYNC_FUNCTIONS[this.require] = ASYNC_FUNCTIONS[this.require] || {};\n\n      // eslint-disable-next-line global-require\n      require(this.require);\n    }\n  }\n\n  define(name, fn) {\n    this.syncFunctions[name] = fn;\n  }\n\n  defineAsync(name, fn) {\n    this.asyncFunctions[name] = fn;\n  }\n\n  defines() {\n    return [\n      ...Object.entries(this.syncFunctions).map(([ name ]) => `define('${name}');\\n`),\n      ...Object.entries(this.asyncFunctions).map(([ name ]) => `defineAsync('${name}');\\n`)\n    ];\n  }\n\n  initialize({ timeout } = { timeout: null }) {\n    return this.host.initialize({ timeout, template: this.template });\n  }\n\n  execute({ code, context, timeout }) {\n    return this.host.execute({ code, context, timeout, template: this.template });\n  }\n\n  shutdown(callback) {\n    this.clearTimers();\n\n    this.host.shutdown(callback);\n  }\n\n  finish(result) {\n    if (this.item) {\n      this.item.callback({ ...result, output: this.item.output });\n      this.item = null;\n    }\n\n    this.clearTimers();\n  }\n\n  clearTimers() {\n    for (const [ id, timer ] of Object.entries(this.timers)) {\n      timer.clear();\n      delete this.timers[id];\n    }\n  }\n\n  dispatch({ name, args }, { fail, respond, callback }) {\n    const params = [ args, { respond, fail, callback } ];\n\n    switch (name) {\n      case 'setResult': {\n        return this.setResult(...params);\n      }\n      case 'httpRequest': {\n        return this.httpRequest(...params);\n      }\n      case 'setTimeout': {\n        return this.setTimeout(...params);\n      }\n      case 'clearTimeout': {\n        return this.clearTimeout(...params);\n      }\n      case 'log': {\n        return this.log(...params);\n      }\n      case 'error': {\n        return this.error(...params);\n      }\n      default: {\n        const fn = this.syncFunctions[name] || this.asyncFunctions[name];\n\n        if (fn) {\n          fn(...params);\n        } else {\n          throw new Error(`${ name } is not a valid method`);\n        }\n      }\n    }\n  }\n\n  setResult([ result ], { respond }) {\n    this.finish(result);\n\n    respond();\n\n    this.next();\n  }\n\n  setTimeout([ timeout ], { respond, callback }) {\n    const timer = new Timer();\n\n    timer.start(timeout || 0, callback);\n\n    const id = timer.id;\n\n    this.timers[id] = timer;\n\n    respond(id);\n  }\n\n  clearTimeout([ timerID ], { respond }) {\n    const timer = this.timers[+timerID];\n\n    if (timer) {\n      timer.clear();\n      delete this.timers[+timerID];\n    }\n\n    respond();\n  }\n\n  httpRequest([ options ], { respond, fail, callback }) {\n    options = options || {};\n\n    request(this.processRequestOptions(options), (err, response, body) => {\n      if (response && Buffer.isBuffer(response.body)) {\n        response.body = body = response.body.toString('base64');\n      }\n\n      if (!callback) {\n        if (err) {\n          fail(err);\n        } else {\n          respond(response);\n        }\n      } else {\n        callback(err, response, body);\n      }\n    });\n\n    if (callback) {\n      respond();\n    }\n  }\n\n  log([ args ], { respond, callback }) {\n    this.write({ type: 'log', args });\n    console.log(...args);\n    respond();\n  }\n\n  error([ args ], { respond, callback }) {\n    this.write({ type: 'error', args });\n    console.error(...args);\n    respond();\n  }\n\n  write({ type, args }) {\n    this.item.output.push({ type, time: new Date(), message: util.format(...args) });\n  }\n\n  processRequestOptions(options) {\n    return options;\n  }\n}\n"],"file":"sandbox-old.js"}