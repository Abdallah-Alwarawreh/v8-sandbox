{"version":3,"sources":["../../lib/server/sandbox.js"],"names":["TimeoutError","Error","isTimeout","Sandbox","constructor","socket","Socket","error","console","id","server","net","createServer","on","handleConnection","handleError","listen","socketName","queue","timers","setup","host","kill","Host","process","platform","path","join","cwd","initialize","template","timeout","Promise","resolve","push","type","output","callback","item","next","execute","code","context","length","pop","removeAllListeners","finish","shutdown","close","result","clearTimers","timer","Object","entries","clear","dispatch","name","args","respond","params","setResult","httpRequest","setTimeout","clearTimeout","log","Timer","start","value","timerID","options","sync","err","response","body","Buffer","isBuffer","toString","write","time","Date","message","util","format"],"mappings":"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","sourcesContent":["import path from 'path';\nimport net from 'net';\nimport util from 'util';\nimport request from 'request';\nimport { once } from 'lodash';\nimport { v4 as uuid } from 'uuid';\nimport Socket from './socket';\nimport Host from './host';\nimport Timer from './timer';\n\nclass TimeoutError extends Error {\n  get isTimeout() {\n    return true;\n  }\n}\n\nexport default class Sandbox {\n  constructor() {\n    this.id = uuid();\n\n    this.server = net.createServer();\n\n    this.server.on('connection', this.handleConnection);\n    this.server.on('error', this.handleError);\n\n    this.server.listen(this.socketName);\n\n    this.queue = [];\n\n    this.timers = {};\n\n    this.setup();\n  }\n\n  setup() {\n    if (this.host) {\n      this.host.kill();\n    }\n\n    this.host = new Host(this.socketName);\n  }\n\n  get socketName() {\n    return process.platform === 'win32' ? path.join('\\\\\\\\?\\\\pipe', process.cwd(), this.id)\n                                        : `/tmp/${ this.id }`;\n  }\n\n  handleConnection = (socket) => {\n    // console.log('server connection');\n    this.socket = new Socket(socket, this);\n  }\n\n  handleError = (error) => {\n    console.error('server error', error);\n  }\n\n  initialize({ template, timeout }) {\n    return new Promise(resolve => {\n      this.queue.push({\n        type: 'initialize',\n        template,\n        output: [],\n        timeout,\n        callback: once(resolve)\n      });\n  \n      if (!this.item) {\n        this.next();\n      }\n    });\n  }\n\n  execute({ code, context, timeout }) {\n    return new Promise(resolve => {\n      this.queue.push({\n        type: 'execute',\n        code,\n        context: context || {},\n        output: [],\n        timeout,\n        callback: once(resolve)\n      });\n  \n      if (!this.item) {\n        this.next();\n      }\n    });\n  }\n\n  next() {\n    this.item = null;\n\n    if (this.queue.length === 0) {\n      return;\n    }\n\n    const item = this.item = this.queue.pop();\n\n    this.host.removeAllListeners();\n\n    this.host.on('error', (error) => {\n      console.error('worker error', error);\n\n      this.finish({ error: new Error('worker error') });\n\n      this.next();\n    });\n\n    this.host.on('timeout', () => {\n      this.finish({ error: new TimeoutError('timeout') });\n  \n      this.next();\n    });\n\n    this.host.process(item);\n  }\n\n  shutdown(callback) {\n    this.host.kill();\n\n    if (this.socket) {\n      this.socket.shutdown();\n    }\n\n    this.server.close(callback);\n  }\n\n  finish(result) {\n    if (this.item) {\n      this.item.callback( { ...result, output: this.item.output });\n      this.item = null;\n    }\n\n    this.clearTimers();\n  }\n\n  clearTimers() {\n    for (const [ id, timer ] of Object.entries(this.timers)) {\n      timer.clear();\n      delete this.timers[id];\n    }\n  }\n\n  dispatch({ name, args }, respond, callback) {\n    const params = [ args, respond, callback ];\n\n    switch (name) {\n      case 'setResult': {\n        return this.setResult(...params);\n      }\n      case 'httpRequest': {\n        return this.httpRequest(...params);\n      }\n      case 'setTimeout': {\n        return this.setTimeout(...params);\n      }\n      case 'clearTimeout': {\n        return this.clearTimeout(...params);\n      }\n      case 'log': {\n        return this.log(...params);\n      }\n      case 'error': {\n        return this.error(...params);\n      }\n      default: {\n        throw new Error(`${ name } is not a valid method`);\n      }\n    }\n  }\n\n  setResult([ result ], respond, callback) {\n    this.finish(result);\n    \n    respond();\n\n    this.next();\n  }\n\n  setTimeout([ timeout ], respond, callback) {\n    const timer = new Timer();\n\n    timer.start(timeout || 0, callback);\n\n    const id = +timer.id;\n\n    this.timers[id] = timer;\n\n    respond({ value: id });\n  }\n\n  clearTimeout(timerID, respond, callback) {\n    const timer = this.timers[+timerID];\n\n    if (timer) {\n      timer.clear();\n      delete this.timers[+timerID];\n    }\n\n    respond();\n  }\n\n  httpRequest([ options ], respond, callback) {\n    const { sync } = options || {};\n\n    request(options, (err, response, body) => {\n      if (response && Buffer.isBuffer(response.body)) {\n        response.body = body = response.body.toString('base64');\n      }\n\n      if (sync) {\n        respond({ value: { err, response, body } });\n      } else {\n        callback(err, response, body);\n      }\n    });\n\n    if (!sync) {\n      respond();\n    }\n  }\n\n  log([ args ], respond, callback) {\n    this.write({ type: 'log', args });\n    console.log(...args);\n    respond();\n  }\n\n  error([ args ], respond, callback) {\n    this.write({ type: 'error', args });\n    console.error(...args);\n    respond();\n  }\n\n  write({ type, args }) {\n    this.item.output.push({ type, time: new Date(), message: util.format(...args) });\n  }\n}"],"file":"sandbox.js"}