{"version":3,"sources":["../../lib/server/sandbox.js"],"names":["TimeoutError","Error","isTimeout","Sandbox","constructor","socket","Socket","error","console","id","server","net","createServer","on","handleConnection","handleError","listen","socketName","queue","setup","host","kill","Host","process","platform","path","join","cwd","execute","code","context","timeout","callback","push","item","next","length","pop","removeAllListeners","shutdown","close","dispatch","name","args","respond","params","setResult","httpRequest","setTimeout","clearTimeout","result","value","timerID","options","sync","err","response","body","Buffer","isBuffer","toString"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;AAEA,MAAMA,YAAN,SAA2BC,KAA3B,CAAiC;AAC/B,MAAIC,SAAJ,GAAgB;AACd,WAAO,IAAP;AACD;;AAH8B;;AAMlB,MAAMC,OAAN,CAAc;AAC3BC,EAAAA,WAAW,GAAG;AAAA,8CA4BMC,MAAD,IAAY;AAC7B;AACA,WAAKA,MAAL,GAAc,IAAIC,eAAJ,CAAWD,MAAX,EAAmB,IAAnB,CAAd;AACD,KA/Ba;;AAAA,yCAiCCE,KAAD,IAAW;AACvBC,MAAAA,OAAO,CAACD,KAAR,CAAc,cAAd,EAA8BA,KAA9B;AACD,KAnCa;;AACZ,SAAKE,EAAL,GAAU,eAAV;AAEA,SAAKC,MAAL,GAAcC,aAAIC,YAAJ,EAAd;AAEA,SAAKF,MAAL,CAAYG,EAAZ,CAAe,YAAf,EAA6B,KAAKC,gBAAlC;AACA,SAAKJ,MAAL,CAAYG,EAAZ,CAAe,OAAf,EAAwB,KAAKE,WAA7B;AAEA,SAAKL,MAAL,CAAYM,MAAZ,CAAmB,KAAKC,UAAxB;AAEA,SAAKC,KAAL,GAAa,EAAb;AAEA,SAAKC,KAAL;AACD;;AAEDA,EAAAA,KAAK,GAAG;AACN,QAAI,KAAKC,IAAT,EAAe;AACb,WAAKA,IAAL,CAAUC,IAAV;AACD;;AAED,SAAKD,IAAL,GAAY,IAAIE,aAAJ,CAAS,KAAKL,UAAd,CAAZ;AACD;;AAED,MAAIA,UAAJ,GAAiB;AACf,WAAOM,OAAO,CAACC,QAAR,KAAqB,OAArB,GAA+BC,cAAKC,IAAL,CAAU,aAAV,EAAyBH,OAAO,CAACI,GAAR,EAAzB,EAAwC,KAAKlB,EAA7C,CAA/B,GACgC,QAAQ,KAAKA,EAAI,EADxD;AAED;;AAWDmB,EAAAA,OAAO,CAAC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,GAAD,EAA6BC,QAA7B,EAAuC;AAC5C,SAAKd,KAAL,CAAWe,IAAX,CAAgB;AACdJ,MAAAA,IADc;AAEdC,MAAAA,OAAO,EAAEA,OAAO,IAAI,EAFN;AAGdC,MAAAA,OAHc;AAIdC,MAAAA,QAAQ,EAAE,kBAAKA,QAAL;AAJI,KAAhB;;AAOA,QAAI,CAAC,KAAKE,IAAV,EAAgB;AACd,WAAKC,IAAL;AACD;AACF;;AAEDA,EAAAA,IAAI,GAAG;AACL,SAAKD,IAAL,GAAY,IAAZ;;AAEA,QAAI,KAAKhB,KAAL,CAAWkB,MAAX,KAAsB,CAA1B,EAA6B;AAC3B;AACD;;AAED,UAAMF,IAAI,GAAG,KAAKA,IAAL,GAAY,KAAKhB,KAAL,CAAWmB,GAAX,EAAzB;AAEA,SAAKjB,IAAL,CAAUkB,kBAAV;AAEA,SAAKlB,IAAL,CAAUP,EAAV,CAAa,OAAb,EAAuBN,KAAD,IAAW;AAC/BC,MAAAA,OAAO,CAACD,KAAR,CAAc,cAAd,EAA8BA,KAA9B;AAEA2B,MAAAA,IAAI,CAACF,QAAL,CAAc;AAAEzB,QAAAA,KAAK,EAAE,IAAIN,KAAJ,CAAU,cAAV;AAAT,OAAd;AAEA,WAAKkC,IAAL;AACD,KAND;AAQA,SAAKf,IAAL,CAAUP,EAAV,CAAa,SAAb,EAAwB,MAAM;AAC5BqB,MAAAA,IAAI,CAACF,QAAL,CAAc;AAAEzB,QAAAA,KAAK,EAAE,IAAIP,YAAJ,CAAiB,SAAjB;AAAT,OAAd;AAEA,WAAKmC,IAAL;AACD,KAJD;AAMA,SAAKf,IAAL,CAAUQ,OAAV,CAAkBM,IAAlB;AACD;;AAEDK,EAAAA,QAAQ,CAACP,QAAD,EAAW;AACjB,SAAKZ,IAAL,CAAUC,IAAV;;AAEA,QAAI,KAAKhB,MAAT,EAAiB;AACf,WAAKA,MAAL,CAAYkC,QAAZ;AACD;;AAED,SAAK7B,MAAL,CAAY8B,KAAZ,CAAkBR,QAAlB;AACD;;AAEDS,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAD,EAAiBC,OAAjB,EAA0BZ,QAA1B,EAAoC;AAC1C,UAAMa,MAAM,GAAG,CAAE,GAAGF,IAAL,EAAWC,OAAX,EAAoBZ,QAApB,CAAf;;AAEA,YAAQU,IAAR;AACE,WAAK,WAAL;AAAkB;AAChB,iBAAO,KAAKI,SAAL,CAAe,GAAGD,MAAlB,CAAP;AACD;;AACD,WAAK,aAAL;AAAoB;AAClB,iBAAO,KAAKE,WAAL,CAAiB,GAAGF,MAApB,CAAP;AACD;;AACD,WAAK,YAAL;AAAmB;AACjB,iBAAO,KAAKG,UAAL,CAAgB,GAAGH,MAAnB,CAAP;AACD;;AACD,WAAK,cAAL;AAAqB;AACnB,iBAAO,KAAKI,YAAL,CAAkB,GAAGJ,MAArB,CAAP;AACD;;AACD;AAAS;AACP,gBAAM,IAAI5C,KAAJ,CAAW,GAAGyC,IAAM,wBAApB,CAAN;AACD;AAfH;AAiBD;;AAEDI,EAAAA,SAAS,CAACI,MAAD,EAASN,OAAT,EAAkBZ,QAAlB,EAA4B;AACnC,SAAKE,IAAL,CAAUF,QAAV,CAAmBkB,MAAnB;AAEAN,IAAAA,OAAO,CAAC;AAAEO,MAAAA,KAAK,EAAE;AAAT,KAAD,CAAP;AAEA,SAAKhB,IAAL;AACD;;AAEDa,EAAAA,UAAU,CAACjB,OAAD,EAAUa,OAAV,EAAmBZ,QAAnB,EAA6B;AACrC,UAAMoB,OAAO,GAAGJ,UAAU,CAAChB,QAAD,EAAWD,OAAX,CAA1B;AAEAa,IAAAA,OAAO,CAAC;AAAEO,MAAAA,KAAK,EAAE,CAACC;AAAV,KAAD,CAAP;AACD;;AAEDH,EAAAA,YAAY,CAACG,OAAD,EAAUR,OAAV,EAAmBZ,QAAnB,EAA6B;AACvCiB,IAAAA,YAAY,CAACG,OAAD,CAAZ;AAEAR,IAAAA,OAAO,CAAC;AAAEO,MAAAA,KAAK,EAAE;AAAT,KAAD,CAAP;AACD;;AAEDJ,EAAAA,WAAW,CAACM,OAAD,EAAUT,OAAV,EAAmBZ,QAAnB,EAA6B;AACtC,UAAM;AAAEsB,MAAAA;AAAF,QAAWD,OAAjB;AAEA,0BAAQA,OAAR,EAAiB,CAACE,GAAD,EAAMC,QAAN,EAAgBC,IAAhB,KAAyB;AACxC,UAAID,QAAQ,IAAIE,MAAM,CAACC,QAAP,CAAgBH,QAAQ,CAACC,IAAzB,CAAhB,EAAgD;AAC9CD,QAAAA,QAAQ,CAACC,IAAT,GAAgBA,IAAI,GAAGD,QAAQ,CAACC,IAAT,CAAcG,QAAd,CAAuB,QAAvB,CAAvB;AACD;;AAED,UAAIN,IAAJ,EAAU;AACRV,QAAAA,OAAO,CAAC;AAAEO,UAAAA,KAAK,EAAE;AAAEI,YAAAA,GAAF;AAAOC,YAAAA,QAAP;AAAiBC,YAAAA;AAAjB;AAAT,SAAD,CAAP;AACD,OAFD,MAEO;AACLzB,QAAAA,QAAQ,CAACuB,GAAD,EAAMC,QAAN,EAAgBC,IAAhB,CAAR;AACD;AACF,KAVD;;AAYA,QAAI,CAACH,IAAL,EAAW;AACTV,MAAAA,OAAO,CAAC;AAAEO,QAAAA,KAAK,EAAE;AAAT,OAAD,CAAP;AACD;AACF;;AArJ0B","sourcesContent":["import path from 'path';\nimport net from 'net';\nimport request from 'request';\nimport Socket from './socket';\nimport Host from './host';\nimport { once } from 'lodash';\nimport { v4 as uuid } from 'uuid';\n\nclass TimeoutError extends Error {\n  get isTimeout() {\n    return true;\n  }\n}\n\nexport default class Sandbox {\n  constructor() {\n    this.id = uuid();\n\n    this.server = net.createServer();\n\n    this.server.on('connection', this.handleConnection);\n    this.server.on('error', this.handleError);\n\n    this.server.listen(this.socketName);\n\n    this.queue = [];\n\n    this.setup();\n  }\n\n  setup() {\n    if (this.host) {\n      this.host.kill();\n    }\n\n    this.host = new Host(this.socketName);\n  }\n\n  get socketName() {\n    return process.platform === 'win32' ? path.join('\\\\\\\\?\\\\pipe', process.cwd(), this.id)\n                                        : `/tmp/${ this.id }`;\n  }\n\n  handleConnection = (socket) => {\n    // console.log('server connection');\n    this.socket = new Socket(socket, this);\n  }\n\n  handleError = (error) => {\n    console.error('server error', error);\n  }\n\n  execute({ code, context, timeout }, callback) {\n    this.queue.push({\n      code,\n      context: context || {},\n      timeout,\n      callback: once(callback)\n    });\n\n    if (!this.item) {\n      this.next();\n    }\n  }\n\n  next() {\n    this.item = null;\n\n    if (this.queue.length === 0) {\n      return;\n    }\n\n    const item = this.item = this.queue.pop();\n\n    this.host.removeAllListeners();\n\n    this.host.on('error', (error) => {\n      console.error('worker:error', error);\n\n      item.callback({ error: new Error('worker error') });\n\n      this.next();\n    });\n\n    this.host.on('timeout', () => {\n      item.callback({ error: new TimeoutError('timeout') });\n  \n      this.next();\n    });\n\n    this.host.execute(item);\n  }\n\n  shutdown(callback) {\n    this.host.kill();\n\n    if (this.socket) {\n      this.socket.shutdown();\n    }\n\n    this.server.close(callback);\n  }\n\n  dispatch({ name, args }, respond, callback) {\n    const params = [ ...args, respond, callback ];\n\n    switch (name) {\n      case 'setResult': {\n        return this.setResult(...params);\n      }\n      case 'httpRequest': {\n        return this.httpRequest(...params);\n      }\n      case 'setTimeout': {\n        return this.setTimeout(...params);\n      }\n      case 'clearTimeout': {\n        return this.clearTimeout(...params);\n      }\n      default: {\n        throw new Error(`${ name } is not a valid method`);\n      }\n    }\n  }\n\n  setResult(result, respond, callback) {\n    this.item.callback(result);\n    \n    respond({ value: null });\n\n    this.next();\n  }\n\n  setTimeout(timeout, respond, callback) {\n    const timerID = setTimeout(callback, timeout);\n\n    respond({ value: +timerID });\n  }\n\n  clearTimeout(timerID, respond, callback) {\n    clearTimeout(timerID);\n\n    respond({ value: null });\n  }\n\n  httpRequest(options, respond, callback) {\n    const { sync } = options;\n\n    request(options, (err, response, body) => {\n      if (response && Buffer.isBuffer(response.body)) {\n        response.body = body = response.body.toString('base64');\n      }\n\n      if (sync) {\n        respond({ value: { err, response, body } });\n      } else {\n        callback(err, response, body);\n      }\n    });\n\n    if (!sync) {\n      respond({ value: null });\n    }\n  }\n}"],"file":"sandbox.js"}