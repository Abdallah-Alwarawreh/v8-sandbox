{"version":3,"sources":["../../lib/server/sandbox.js"],"names":["TimeoutError","Error","isTimeout","Sandbox","constructor","socket","Socket","error","console","id","server","net","createServer","on","handleConnection","handleError","listen","socketName","queue","setup","host","kill","Host","process","platform","path","join","cwd","execute","code","context","timeout","Promise","resolve","push","output","callback","item","next","length","pop","removeAllListeners","finish","shutdown","close","result","dispatch","name","args","respond","params","setResult","httpRequest","setTimeout","clearTimeout","timerID","value","options","sync","err","response","body","Buffer","isBuffer","toString","log","write","type","time","Date","message","util","format"],"mappings":"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","sourcesContent":["import path from 'path';\nimport net from 'net';\nimport request from 'request';\nimport Socket from './socket';\nimport Host from './host';\nimport { once } from 'lodash';\nimport { v4 as uuid } from 'uuid';\nimport util from 'util';\n\nclass TimeoutError extends Error {\n  get isTimeout() {\n    return true;\n  }\n}\n\nexport default class Sandbox {\n  constructor() {\n    this.id = uuid();\n\n    this.server = net.createServer();\n\n    this.server.on('connection', this.handleConnection);\n    this.server.on('error', this.handleError);\n\n    this.server.listen(this.socketName);\n\n    this.queue = [];\n\n    this.setup();\n  }\n\n  setup() {\n    if (this.host) {\n      this.host.kill();\n    }\n\n    this.host = new Host(this.socketName);\n  }\n\n  get socketName() {\n    return process.platform === 'win32' ? path.join('\\\\\\\\?\\\\pipe', process.cwd(), this.id)\n                                        : `/tmp/${ this.id }`;\n  }\n\n  handleConnection = (socket) => {\n    // console.log('server connection');\n    this.socket = new Socket(socket, this);\n  }\n\n  handleError = (error) => {\n    console.error('server error', error);\n  }\n\n  execute({ code, context, timeout }) {\n    return new Promise(resolve => {\n      this.queue.push({\n        code,\n        context: context || {},\n        output: [],\n        timeout,\n        callback: once(resolve)\n      });\n  \n      if (!this.item) {\n        this.next();\n      }\n    });\n  }\n\n  next() {\n    this.item = null;\n\n    if (this.queue.length === 0) {\n      return;\n    }\n\n    const item = this.item = this.queue.pop();\n\n    this.host.removeAllListeners();\n\n    this.host.on('error', (error) => {\n      console.error('worker:error', error);\n\n      this.finish({ error: new Error('worker error') });\n\n      this.next();\n    });\n\n    this.host.on('timeout', () => {\n      this.finish({ error: new TimeoutError('timeout') });\n  \n      this.next();\n    });\n\n    this.host.execute(item);\n  }\n\n  shutdown(callback) {\n    this.host.kill();\n\n    if (this.socket) {\n      this.socket.shutdown();\n    }\n\n    this.server.close(callback);\n  }\n\n  finish(result) {\n    if (this.item) {\n      this.item.callback( { ...result, output: this.item.output });\n      this.item = null;\n    }\n  }\n\n  dispatch({ name, args }, respond, callback) {\n    const params = [ ...args, respond, callback ];\n\n    switch (name) {\n      case 'setResult': {\n        return this.setResult(...params);\n      }\n      case 'httpRequest': {\n        return this.httpRequest(...params);\n      }\n      case 'setTimeout': {\n        return this.setTimeout(...params);\n      }\n      case 'clearTimeout': {\n        return this.clearTimeout(...params);\n      }\n      default: {\n        throw new Error(`${ name } is not a valid method`);\n      }\n    }\n  }\n\n  setResult(result, respond, callback) {\n    this.finish(result);\n    \n    respond();\n\n    this.next();\n  }\n\n  setTimeout(timeout, respond, callback) {\n    const timerID = setTimeout(callback, timeout);\n\n    respond({ value: +timerID });\n  }\n\n  clearTimeout(timerID, respond, callback) {\n    clearTimeout(timerID);\n\n    respond();\n  }\n\n  httpRequest(options, respond, callback) {\n    const { sync } = options;\n\n    request(options, (err, response, body) => {\n      if (response && Buffer.isBuffer(response.body)) {\n        response.body = body = response.body.toString('base64');\n      }\n\n      if (sync) {\n        respond({ value: { err, response, body } });\n      } else {\n        callback(err, response, body);\n      }\n    });\n\n    if (!sync) {\n      respond();\n    }\n  }\n\n  log(args, respond, callback) {\n    this.write({ type: 'log', args });\n    console.log(...args);\n    respond();\n  }\n\n  error(args, respond, callback) {\n    this.write({ type: 'error', args });\n    console.error(...args);\n    respond();\n  }\n\n  write({ type, args }) {\n    this.output.push({ type, time: new Date(), message: util.format(...args) });\n  }\n}"],"file":"sandbox.js"}