{"version":3,"sources":["../../lib/server/sandbox.ts"],"names":["TimeoutError","Error","isTimeout","nextID","Host","constructor","require","template","fork","finish","error","message","timeout","Promise","resolve","callback","result","type","onInitialize","onExecute","socket","Socket","console","id","process","pid","initializeTimeout","Timer","executeTimeout","functions","Functions","start","code","signal","shutdown","initialize","queue","push","defines","join","output","initialized","execute","context","socketName","platform","path","cwd","dispatch","invocation","fail","respond","kill","worker","__dirname","on","clear","removeAllListeners","send","cleanupSocket","fs","unlinkSync","ex","server","net","createServer","handleConnection","handleError","listen","async","processMessage","clearTimers","close","args","handleTimeout","global","JSON","stringify"],"mappings":"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","sourcesContent":["import path from 'path';\nimport net from 'net';\nimport { fork, ChildProcess } from 'child_process';\nimport Timer from './timer';\nimport Socket from './socket';\nimport Functions from './functions';\nimport async from 'async';\nimport { once } from 'lodash';\nimport onExit from 'signal-exit';\n\nexport interface Log {\n  type: string;\n  time: Date;\n  message: string;\n}\n\nexport interface Result {\n  value?: any;\n  error?: {\n    name: string;\n    message: string;\n    stack: string;\n  };\n  output?: Log[];\n}\n\nexport interface Message {\n  type: 'initialize' | 'execute';\n  template?: string;\n  code?: string;\n  context?: any;\n  output: Log[];\n  // result: Result;\n  timeout: number;\n  callback: Function;\n}\n\nclass TimeoutError extends Error {\n  get isTimeout() {\n    return true;\n  }\n}\n\nlet nextID = 0;\n\nexport default class Host {\n  id: string;\n\n  template: string;\n\n  initializeTimeout: Timer;\n\n  executeTimeout: Timer;\n\n  server: net.Server;\n\n  worker: ChildProcess;\n\n  initialized: boolean;\n\n  socket: Socket;\n\n  queue: async.AsyncQueue<Message>;\n\n  message: Message;\n\n  functions: Functions;\n\n  constructor({ require, template } = { require: null, template: null }) {\n    this.id = `v8-sandbox-${ process.pid }-${ ++nextID }`;\n\n    this.initializeTimeout = new Timer();\n    this.executeTimeout = new Timer();\n\n    this.template = template || '';\n    this.functions = new Functions(this, { require });\n\n    this.start();\n\n    onExit((code, signal) => {\n      this.shutdown();\n    });\n  }\n\n  initialize({ timeout } = { timeout: null }): Promise<Result> {\n    return new Promise(resolve => {\n      this.queue.push({\n        type: 'initialize',\n        template: [ this.functions.defines().join('\\n'), this.template ].join('\\n'),\n        timeout,\n        output: [],\n        callback: (result: Result) => {\n          this.initialized = true;\n\n          resolve(result);\n        }\n      });\n    });\n  }\n\n  async execute({ code, context, timeout }) {\n    this.start();\n\n    const result = await this.initialize({ timeout });\n\n    if (result.error) {\n      return result;\n    }\n\n    return new Promise(resolve => {\n      this.queue.push({\n        type: 'execute',\n        code,\n        timeout,\n        context: context || {},\n        output: [],\n        callback: (result: Result) => {\n          this.initialized = false;\n\n          resolve(result);\n        }\n      });\n    });\n  }\n\n  get socketName() {\n    return process.platform === 'win32' ? path.join('\\\\\\\\?\\\\pipe', process.cwd(), this.id)\n      : `/tmp/${ this.id }`;\n  }\n\n  dispatch(invocation, { fail, respond, callback }) {\n    this.functions.dispatch(invocation, { message: this.message, fail, respond, callback });\n  }\n\n  fork() {\n    this.kill();\n\n    this.worker = fork(path.join(__dirname, '..', 'client', 'worker'), [ this.socketName ]);\n\n    this.worker.on('error', (error) => {\n      this.fork();\n      this.finish({ error });\n    });\n  }\n\n  kill() {\n    this.initializeTimeout.clear();\n    this.executeTimeout.clear();\n\n    if (this.worker) {\n      this.worker.removeAllListeners();\n      this.worker.send({ type: 'exit' });\n      this.worker.kill();\n      this.worker = null;\n      this.initialized = false;\n    }\n  }\n\n  cleanupSocket() {\n    try {\n      fs.unlinkSync(this.socketName);\n    } catch (ex) {\n      // silent\n    }\n  }\n\n  start() {\n    if (this.server) {\n      return;\n    }\n\n    this.shutdown(null);\n\n    this.server = net.createServer();\n    this.server.on('connection', this.handleConnection);\n    this.server.on('error', this.handleError);\n\n    this.cleanupSocket();\n\n    this.server.listen(this.socketName);\n\n    this.queue = async.queue(this.processMessage, 1);\n\n    this.fork();\n  }\n\n  shutdown(callback) {\n    this.functions.clearTimers();\n\n    this.kill();\n\n    if (this.socket) {\n      this.socket.shutdown();\n      this.socket = null;\n    }\n\n    if (this.server) {\n      this.server.close(() => {\n        this.cleanupSocket();\n\n        if (callback) {\n          callback();\n        }\n      });\n\n      this.server = null;\n    }\n  }\n\n  handleTimeout = () => {\n    this.fork();\n    this.finish({ error: new TimeoutError(`timeout: ${this.message.timeout }ms`) });\n  };\n\n  callback(id, args) {\n    this.worker.send({ type: 'callback', id, args });\n  }\n\n  processMessage = async (message: Message) => {\n    this.message = message;\n\n    return new Promise(resolve => {\n      const { callback } = this.message;\n\n      this.message.callback = once((result) => {\n        callback(result);\n        resolve();\n      });\n\n      switch (message.type) {\n        case 'initialize':\n          return this.onInitialize(message);\n        case 'execute':\n          return this.onExecute(message);\n        default:\n          this.finish({ error: new Error('invalid message') });\n      }\n    });\n  };\n\n  onInitialize({ template, timeout }: Message) {\n    if (this.initialized) {\n      return this.finish({});\n    }\n\n    this.initializeTimeout.start(timeout, this.handleTimeout);\n\n    this.worker.send({ type: 'initialize', template });\n  }\n\n  onExecute({ code, context, timeout }: Message) {\n    this.executeTimeout.start(timeout, this.handleTimeout);\n\n    global.context = context;\n\n    this.worker.send({ type: 'execute', code, context: JSON.stringify(context) });\n  }\n\n  finish(result) {\n    this.functions.clearTimers();\n\n    if (this.message) {\n      this.message.callback({ ...result, output: this.message.output });\n    }\n  }\n\n  handleConnection = (socket) => {\n    this.socket = new Socket(socket, this);\n  };\n\n  handleError = (error) => {\n    console.error('server error', error);\n  };\n}\n"],"file":"sandbox.js"}