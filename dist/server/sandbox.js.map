{"version":3,"sources":["../../lib/server/sandbox.ts"],"names":["TimeoutError","Error","isTimeout","SYNC_FUNCTIONS","ASYNC_FUNCTIONS","Sandbox","constructor","template","require","socket","Socket","error","console","id","process","pid","server","net","createServer","on","handleConnection","handleError","cleanupSocket","listen","socketName","queue","timers","setup","host","kill","Host","global","define","bind","defineAsync","syncFunctions","asyncFunctions","name","fn","defines","Object","entries","map","platform","path","join","cwd","initialize","timeout","Promise","resolve","worker","initialized","push","type","output","callback","result","item","next","execute","code","context","length","pop","removeAllListeners","finish","fs","unlinkSync","ex","shutdown","clearTimers","close","timer","clear","dispatch","args","fail","respond","params","setResult","httpRequest","setTimeout","clearTimeout","log","Timer","start","timerID","options","processRequestOptions","err","response","body","Buffer","isBuffer","toString","write","time","Date","message","util","format"],"mappings":"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","sourcesContent":["import fs from 'fs';\nimport path from 'path';\nimport net from 'net';\nimport util from 'util';\nimport request from 'request';\nimport { once } from 'lodash';\nimport Socket from './socket';\nimport Host from './host';\nimport Timer from './timer';\n\nclass TimeoutError extends Error {\n  get isTimeout() {\n    return true;\n  }\n}\n\ninterface Log {\n  type: string;\n  time: Date;\n  message: string;\n}\n\nexport interface Result {\n  value?: any;\n  error?: {\n    name: string;\n    message: string;\n    stack: string;\n  };\n  output?: Log[];\n}\n\nconst SYNC_FUNCTIONS = {};\n\nconst ASYNC_FUNCTIONS = {};\n\ninterface Timers {\n  [key: string]: Timer;\n}\n\ninterface Functions {\n  [key: string]: Function;\n}\n\ninterface Item {\n  type: 'initialize' | 'execute';\n  template?: string;\n  code?: string;\n  context?: any;\n  output: Log[];\n  timeout: number;\n  callback: Function;\n}\n\nexport default class Sandbox {\n  id: string;\n\n  template: string;\n\n  require: string;\n\n  server: net.Server;\n\n  socket: Socket;\n\n  host: Host;\n\n  queue: Item[];\n\n  timers: Timers;\n\n  syncFunctions: Functions;\n\n  asyncFunctions: Functions;\n\n  item: Item;\n\n  constructor(\n    { template, require } =\n    { template: null, require: null }\n  ) {\n    this.id = `v8-sandbox-socket-${ process.pid }`;\n    this.template = template || '';\n    this.require = require;\n\n    this.server = net.createServer();\n\n    this.server.on('connection', this.handleConnection);\n    this.server.on('error', this.handleError);\n\n    this.cleanupSocket();\n\n    this.server.listen(this.socketName);\n\n    this.queue = [];\n\n    this.timers = {};\n\n    this.setup();\n  }\n\n  setup() {\n    if (this.host) {\n      this.host.kill();\n    }\n\n    this.host = new Host(this.socketName);\n\n    global.define = this.define.bind(this);\n    global.defineAsync = this.defineAsync.bind(this);\n\n    this.syncFunctions = {};\n    this.asyncFunctions = {};\n\n    if (this.require) {\n      this.syncFunctions = SYNC_FUNCTIONS[this.require] = SYNC_FUNCTIONS[this.require] || {};\n      this.asyncFunctions = ASYNC_FUNCTIONS[this.require] = ASYNC_FUNCTIONS[this.require] || {};\n\n      // eslint-disable-next-line global-require\n      require(this.require);\n    }\n  }\n\n  define(name, fn) {\n    this.syncFunctions[name] = fn;\n  }\n\n  defineAsync(name, fn) {\n    this.asyncFunctions[name] = fn;\n  }\n\n  defines() {\n    return [\n      ...Object.entries(this.syncFunctions).map(([ name ]) => `define('${name}');\\n`),\n      ...Object.entries(this.asyncFunctions).map(([ name ]) => `defineAsync('${name}');\\n`)\n    ];\n  }\n\n  get socketName() {\n    return process.platform === 'win32' ? path.join('\\\\\\\\?\\\\pipe', process.cwd(), this.id)\n      : `/tmp/${ this.id }`;\n  }\n\n  handleConnection = (socket) => {\n    this.socket = new Socket(socket, this);\n  };\n\n  handleError = (error) => {\n    console.error('server error', error);\n  };\n\n  initialize({ timeout } = { timeout: null }): Promise<Result> {\n    return new Promise(resolve => {\n      if (this.host.worker.initialized) {\n        return resolve({});\n      }\n\n      this.queue.push({\n        type: 'initialize',\n        template: [ this.defines().join('\\n'), this.template ].join('\\n'),\n        output: [],\n        timeout,\n        callback: once((result: Result) => {\n          this.host.worker.initialized = true;\n\n          resolve(result);\n        })\n      });\n\n      if (!this.item) {\n        this.next();\n      }\n    });\n  }\n\n  async execute({ code, context, timeout }) {\n    const result = await this.initialize({ timeout });\n\n    if (result.error) {\n      return result;\n    }\n\n    return new Promise(resolve => {\n      this.queue.push({\n        type: 'execute',\n        code,\n        context: context || {},\n        output: [],\n        timeout,\n        callback: once(resolve)\n      });\n\n      if (!this.item) {\n        this.next();\n      }\n    });\n  }\n\n  next() {\n    this.item = null;\n\n    if (this.queue.length === 0) {\n      return;\n    }\n\n    const item = this.item = this.queue.pop();\n\n    this.host.removeAllListeners();\n\n    this.host.on('error', (error) => {\n      console.error('worker error', error);\n\n      this.finish({ error: new Error('worker error') });\n\n      this.next();\n    });\n\n    this.host.on('timeout', () => {\n      this.finish({ error: new TimeoutError('timeout') });\n\n      this.next();\n    });\n\n    this.host.process(item);\n  }\n\n  cleanupSocket() {\n    try {\n      fs.unlinkSync(this.socketName);\n    } catch (ex) {\n      // silent\n    }\n  }\n\n  shutdown(callback) {\n    this.clearTimers();\n\n    this.host.kill();\n\n    if (this.socket) {\n      this.socket.shutdown();\n    }\n\n    this.server.close(() => {\n      this.cleanupSocket();\n\n      if (callback) {\n        callback();\n      }\n    });\n  }\n\n  finish(result) {\n    if (this.item) {\n      this.item.callback({ ...result, output: this.item.output });\n      this.item = null;\n    }\n\n    this.clearTimers();\n  }\n\n  clearTimers() {\n    for (const [ id, timer ] of Object.entries(this.timers)) {\n      timer.clear();\n      delete this.timers[id];\n    }\n  }\n\n  dispatch({ name, args }, { fail, respond, callback }) {\n    const params = [ args, { respond, fail, callback } ];\n\n    switch (name) {\n      case 'setResult': {\n        return this.setResult(...params);\n      }\n      case 'httpRequest': {\n        return this.httpRequest(...params);\n      }\n      case 'setTimeout': {\n        return this.setTimeout(...params);\n      }\n      case 'clearTimeout': {\n        return this.clearTimeout(...params);\n      }\n      case 'log': {\n        return this.log(...params);\n      }\n      case 'error': {\n        return this.error(...params);\n      }\n      default: {\n        const fn = this.syncFunctions[name] || this.asyncFunctions[name];\n\n        if (fn) {\n          fn(...params);\n        } else {\n          throw new Error(`${ name } is not a valid method`);\n        }\n      }\n    }\n  }\n\n  setResult([ result ], { respond }) {\n    this.finish(result);\n\n    respond();\n\n    this.next();\n  }\n\n  setTimeout([ timeout ], { respond, callback }) {\n    const timer = new Timer();\n\n    timer.start(timeout || 0, callback);\n\n    const id = timer.id;\n\n    this.timers[id] = timer;\n\n    respond(id);\n  }\n\n  clearTimeout([ timerID ], { respond }) {\n    const timer = this.timers[+timerID];\n\n    if (timer) {\n      timer.clear();\n      delete this.timers[+timerID];\n    }\n\n    respond();\n  }\n\n  httpRequest([ options ], { respond, fail, callback }) {\n    options = options || {};\n\n    request(this.processRequestOptions(options), (err, response, body) => {\n      if (response && Buffer.isBuffer(response.body)) {\n        response.body = body = response.body.toString('base64');\n      }\n\n      if (!callback) {\n        if (err) {\n          fail(err);\n        } else {\n          respond(response);\n        }\n      } else {\n        callback(err, response, body);\n      }\n    });\n\n    if (callback) {\n      respond();\n    }\n  }\n\n  log([ args ], { respond, callback }) {\n    this.write({ type: 'log', args });\n    console.log(...args);\n    respond();\n  }\n\n  error([ args ], { respond, callback }) {\n    this.write({ type: 'error', args });\n    console.error(...args);\n    respond();\n  }\n\n  write({ type, args }) {\n    this.item.output.push({ type, time: new Date(), message: util.format(...args) });\n  }\n\n  processRequestOptions(options) {\n    return options;\n  }\n}\n"],"file":"sandbox.js"}